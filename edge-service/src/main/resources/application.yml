# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# Full reference for Standard Spring Boot properties is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
# set -Dspring.profiles.active=<dev|sit|int> as JVM argument to run in desired profile
# If no profile is specified explicitly, application will fall back to default profile, which is "local"

spring:
  application:
    name: edge-service
  #  autoconfigure:
  #    exclude: org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
  devtools:
    add-properties: false
    restart:
      enabled: false
      exclude: logs/*,application.log,*.log,*.log.*
  main:
    log-startup-info: true
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
    problemdetails:
      enabled: true
  task:
    execution:
      pool:
        queue-capacity: 10000
        core-size: 8
        keep-alive: 60s
        max-size: 64

#------------------------- Kafka configuration -------------------------
  kafka:
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: edge-service-group
      bootstrap-servers: localhost:9092
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    admin:
      auto-create: true
    listener:
      observation-enabled: true
    template:
      default-topic: observability-topic
      observation-enabled: true

#------------------------- SpringDoc configuration -------------------------
springdoc:
  show-actuator: true
  group-configs:
    - group: actuator
      display-name: Actuator
      paths-to-match: /actuator/**
    - group: edge
      display-name: Edge
      paths-to-match: /**
      paths-to-exclude: /actuator/**
  swagger-ui:
    syntaxHighlight:
      activated: true

#------------------------- Actuators configuration -------------------------
# If not specified '/actuator' is taken as default. If specified must start with '/'
#management.endpoints.web.base-path=/
# Set it as "*", if you want to expose all actuator endpoints

management:
  otlp:
    metrics:
      export:
        enabled: true
  opentelemetry:
    resource-attributes:
      service.name: ${otel.resource.attributes.service.name}
      host.name: ${otel.resource.attributes.host.name}
      service.version: ${otel.resource.attributes.service.version}
      deployment.environment: ${otel.resource.attributes.deployment.environment}
  tracing:
    enabled: true
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
    env:
      show-values: "always"
  metrics:
    tags:
      service.name: ${otel.resource.attributes.service.name}
      host.name: ${otel.resource.attributes.host.name}
      service.version: ${otel.resource.attributes.service.version}
      deployment.environment: ${otel.resource.attributes.deployment.environment}

# ------------- OpenTelemetry configuration --------------
otel:
  #  To Disable the OpenTelemetry SDK autoconfiguration, preferably in local profile
  #  sdk:
  #    disabled: true
  service:
    name: ${spring.application.name}
  exporter:
    otlp:
      endpoint: http://localhost:4318
#  logs.exporter: otlp
#  metrics.exporter: otlp
#  traces.exporter: otlp
  logs.exporter: none
  metrics.exporter: otlp
  traces.exporter: none
  #Configure metrics generation
  metric.export.interval: 10s #Export metrics each 10 seconds
  instrumentation:
    micrometer.enabled: true #Enabe Micrometer metrics bridge
    common:
      default-enabled: true
    annotations:
      enabled: true
    kafka:
      enabled: true
      autoconfigure-interceptor: true
#    spring-web:
#      enabled: true
#    spring-webmvc:
#      enabled: true
  #    runtime-telemetry-java17:
  #      enable-all: true
  #    mongo:
  #      enabled: true
  #      statement-sanitizer:
  #        enabled: true
  propagators:
    - tracecontext
    - baggage
  resource:
    attributes:
      service.name: ${spring.application.name}
      host.name: localhost
      service.version: 1.0.0
      deployment.environment: local
      process.command_args: ""

server:
  port: 8091
  forward-headers-strategy: framework
#  servlet:
#      context-path:

# -------------- Logging configuration ---------------------
logbook:
  filter:
    enabled: true
  format.style: http
  #  filters:
  #    body:
  #      default-enabled: true
  predicate.exclude:
    - path: /actuator/**

logging:
  logback:
    rollingpolicy:
      clean-history-on-start: true
  file:
    path: logs
    name: ${logging.file.path}/edge.log
  level:
    ROOT: info
    '[org.apache.kafka.clients.admin.KafkaAdminClient]': error
    '[org.apache.kafka.clients]': error
#    '[org.zalando.logbook]': TRACE
debug: false
